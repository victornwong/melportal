<?xml version="1.0" encoding="UTF-8"?>
<?page id="meluplcsgn"?>
<zk>
<zscript src="../rwglobal/rwglobaldefs.zs" />
<zscript src="../rwglobal/rwsqlfuncs.zs" />
<zscript src="../rwglobal/formMaker_v1.zs" />
<zscript src="../rwglobal/systemAudit.zs" />
<zscript src="../rwglobal/uploadDocu_v1.zs" />
<zscript src="../rwglobal/fc6_CustomerSelector.zs" />
<zscript src="../rwglobal/jobNotes_funcs.zs" />
<zscript src="../rwglobal/uploadedWorksheet_v1.zs" />
<zscript src="../rwglobal/emailfuncs.zs" />
<zscript src="./uploadFuncs/csgnFuncs.zs" />
<zscript>
<![CDATA[
MYTITLE = "MEL - Consignment Note Management";
MYVERSION = "v0.1.2";
MYPANEL = "meluplcsgnpanel";

/**
 * @title MEL upload consignment note
 * @author Victor Wong
 * @since 09/12/2014
 * @notes
 * 12/01/2015: if snum is NULL, take MEL asset-tag as snum. Also update mel_csgn.usedmelassettag
 * 29/01/2015: req to add mel_csgn.mel_accept flag, MEL can set whether to accept the quote or whatever
 * 14/08/2015: button to send notif email for audit-report complete and quotation-done - req by Nisha
 * 14/08/2015: add MEL inventory item popup-editor, user can change serial-no, mel-asset, proc-type, proc-speed - req by Nisha
 * 17/08/2015: export raw Excel temporary pricing by proc-spec/speed set by coordinator
 */
import java.util.*;
import java.text.*;
import java.io.*;
import org.zkoss.zk.ui.*;
import org.zkoss.zk.zutl.*;
import java.math.BigDecimal;
import org.zkoss.util.media.AMedia;
import org.zkoss.zul.*;
import org.apache.poi.hssf.usermodel.*;
import org.apache.poi.hssf.util.*;
import org.apache.poi.ss.util.*;
import org.victor.*;
sechand = new WebuserSecurity();
myincludeid = Executions.getCurrent().getParameter("myid");
itest_userAccessObj useraccessobj = sechand.itest_getUserAccessObject();
if(useraccessobj == null) Executions.sendRedirect(MAINLOGIN_PAGE);

kiboo = new Generals(); sqlhand = new SqlFuncs(); lbhand = new ListboxHandler();
guihand = new GuiFuncs(); luhand = new LookupFuncs(); dmshand = new DMSFuncs();
gridhand = new GridHandler(); ngfun = new NGfuncs(); rwsqlfun = new RWMS_sql();

MEL_CSGN_PREFIX = "MEL";

Object csgn_upload_data = null;
csgn_sel_item = glob_sel_inventory_obj = null;
last_list_csgn = 0;
glob_sel_csgn = glob_csgn_stat = glob_sel_melcsgn = glob_sel_loca = glob_sel_notes = glob_csgn_qty = "";
glob_sel_inventory = "";

String JN_linkcode()
{
	if(glob_sel_csgn.equals("")) return "";
	return MEL_CSGN_PREFIX + glob_sel_csgn;
}

void doFunc(String itype)
{
	todaydate = kiboo.todayISODateTimeString();
	lui = "MEL_" + glob_sel_loca;
	unm = useraccessobj.username;
	sqlstm = msgtext = "";
	refresh = false;

	if(itype.equals("newcsgn_b"))
	{
		sqlstm = "insert into mel_csgn (datecreated,csgn,mel_user,extranotes,mstatus) values " +
		"('" + todaydate + "','UNDEF','" + unm + "','','NEW');";
	}

	if(itype.equals("updcsgnmeta_b"))
	{
		updmelcsgnpop.close();
		if(glob_sel_csgn.equals("")) return;
		csn = kiboo.replaceSingleQuotes( m_csgn.getValue().trim() );
		etn = kiboo.replaceSingleQuotes( m_extranotes.getValue().trim() );
		shpmeta = kiboo.getDateFromDatebox(m_shipmenteta);
		sqlstm = "update mel_csgn set csgn='" + csn + "', extranotes='" + etn + "', shipmenteta='" + shpmeta + "' where origid=" + glob_sel_csgn;
		m_csgn.setValue(""); m_extranotes.setValue("");
	}

	if(itype.equals("savelist_b"))
	{
		if(glob_sel_csgn.equals("")) return;
		if(csgnasset_holder.getFellowIfAny("csgnassets_lb") == null) return;
		reallySaveMEL_equiplist();
	}

	if(itype.equals("commitcsgn_b"))
	{
		if(glob_sel_csgn.equals("")) return;
		if(glob_csgn_stat.equals("COMMIT"))
		{
			msgtext = "Consignment was already committed..";
		}
		else
		{
			if(glob_sel_loca.equals(""))
			{
				msgtext = "ERR: We need the RW warehouse location..";
			}
			else
			if(glob_sel_melcsgn.equals(""))
			{
				msgtext = "ERR: We need the MEL consignment-note reference code..";
			}
			if(glob_csgn_qty.equals("") || glob_csgn_qty.equals("0"))
			{
				msgtext = "ERR: No equipments list found..";
			}
			else
			{
				if(Messagebox.show("Once consignment note is committed, no more modification..", "Are you sure?",
					Messagebox.YES | Messagebox.NO, Messagebox.QUESTION) !=  Messagebox.YES) return;
				
				sqlstm = "update mel_csgn set mstatus='COMMIT' where origid=" + glob_sel_csgn;

				toggButts(true);
				sendCsgn_Notif(1,glob_sel_csgn); // PROBLEM!! cannot send notif email, string index -1
				add_RWAuditLog(JN_linkcode(),"", "COMMIT consignment note : " + glob_sel_csgn, unm);
			}
		}
	}

	// 29/01/2015: after meeting, dunno wnat to remove snums from database once CSGN cancelled or not.
	if(itype.equals("cancelcsgn_b"))
	{
		if(glob_sel_csgn.equals("")) return;
		if(Messagebox.show("Cancel this consignment: " + glob_sel_csgn, "Are you sure?",
			Messagebox.YES | Messagebox.NO, Messagebox.QUESTION) !=  Messagebox.YES) return;

		sqlstm = "update mel_csgn set mstatus='CANCEL' where origid=" + glob_sel_csgn;

		toggButts(true);
		sendCsgn_Notif(2,glob_sel_csgn);
		add_RWAuditLog(JN_linkcode(),"", "CANCEL consignment note : " + glob_sel_csgn, unm);

		// TODO maybe need to check if some MEL asset already received - check during GRN maybe
	}

	if(itype.equals("notifypart_b")) // send notif to partner, lookup based on glob_sel_loca for each csgn
	{
		sendCsgn_Notif(4,glob_sel_csgn);
		add_RWAuditLog(JN_linkcode(),"", "Sent notification email to partner", unm);
	}

	if(itype.equals("notifmelprice_b")) // 13/08/2015: req nisha, send notif email when price quotes ready for MEL
	{
		sendCsgn_Notif(5,glob_sel_csgn);
		add_RWAuditLog(JN_linkcode(),"", "Sent notification email to MEL for price quotes", unm);
	}

	if(itype.equals("notifreport_b")) // 13/08/2015: req nisha, send notif when audit-report ready for MEL
	{
		sendCsgn_Notif(6,glob_sel_csgn);
		add_RWAuditLog(JN_linkcode(),"", "Sent notification email to MEL for audit-report ready", unm);
	}

	if(itype.equals("notifdups_b")) // 13/08/2015: req nisha, send notif if dups found in consignment upload
	{
		sendCsgn_Notif(7,glob_sel_csgn);
		add_RWAuditLog(JN_linkcode(),"", "Sent notification email to MEL for duplicates in consignment", unm);
	}

	if(itype.equals("genpricing_b")) // 14/08/2015: try to generate items prices if proc-type and proc-speed was set properly
	{
		generateTempPricing();
	}

	if(!sqlstm.equals(""))
	{
		sqlhand.gpSqlExecuter(sqlstm);
		loadCSGN(last_list_csgn);
	}

	if(!msgtext.equals("")) guihand.showMessageBox(msgtext);
}

/**
 * Generate temporary pricing of the uploaded consignment items according to proc-spec/speed set by coordinator
 * No grouping, just export per item and price per row ONLY - raw export
 */
void generateTempPricing()
{
	if(glob_sel_csgn.equals("")) return;

	String[] colhds = { "Contract","Serial Number","Asset Number (MEL Ref)","Item Description",
	"Asset Category","Make","Model","Processor Or Monitor Type","Processor Speed Or Monitor Size","HDD Size","RAM","PRICE" };

	String[] flds = { "contract_no", "serial_no", "mel_asset", "item_desc", "item_type", "brand_make", "model", "sub_type", "sub_spec", "hdd", "ram" };

	sqlstm = "select * from mel_inventory where parent_id=" + glob_sel_csgn;
	r = sqlhand.gpSqlGetRows(sqlstm);

	HSSFWorkbook excelWB = new HSSFWorkbook();
	evaluator = excelWB.getCreationHelper().createFormulaEvaluator();
	HSSFSheet sheet = excelWB.createSheet("price_CSGN" + glob_sel_csgn);

	for(i=0;i<colhds.length;i++)
	{
		excelInsertString(sheet,0,i,colhds[i]);
	}

	rowcount = 1;

	for(d : r)
	{
		for(i=0;i<flds.length;i++)
		{
			excelInsertString(sheet,rowcount,i, kiboo.checkNullString(d.get(flds[i])) );
		}

		pbitm = kiboo.checkNullString(d.get("sub_type")).trim() + " " + kiboo.checkNullString(d.get("sub_spec")).trim();
		digsql = "select top 1 price from rw_mktpricebook where category='MEL' and itemname='" + pbitm + "';";
		mpr = sqlhand.gpSqlFirstRow(digsql);
		itemprice = "0";
		if(mpr != null)
		{
			itemprice = mpr.get("price").toString();
		}
		excelInsertString(sheet,rowcount,i,itemprice);

		rowcount++;
	}

	outfn = session.getWebApp().getRealPath("tmp/meltempprice.xls");
	FileOutputStream fileOut = new FileOutputStream(outfn);
	excelWB.write(fileOut);
	fileOut.close();
	downloadFile(kasiexport,"meltempprice.xls",outfn);
}

void adminFunc(String itype)
{
	todaydate = kiboo.todayISODateTimeString();
	unm = useraccessobj.username;
	sqlstm = msgtext = "";
	refresh = false;

	if(glob_sel_csgn.equals("")) return;

	if(itype.equals("settoday_b"))
	{
		sqlstm = "update mel_csgn set datecreated='" + todaydate + "' where origid=" + glob_sel_csgn;
	}

	if(itype.equals("setnew_b"))
	{
		sqlstm = "update mel_csgn set mstatus='NEW' where origid=" + glob_sel_csgn;
	}

	if(itype.equals("shwauditlogs_b"))
	{
		showSystemAudit(auditlogs_holder,JN_linkcode(),"");
		auditlogs_pop.open(shwauditlogs_b);
	}

	if(itype.equals("trynotif_b"))
	{
		sendCsgn_Notif(3,glob_sel_csgn);
	}

	if(itype.equals("delconsgn_b"))
	{
		if(Messagebox.show("This will hard-delete all uploaded items as well..", "Are you sure?",
			Messagebox.YES | Messagebox.NO, Messagebox.QUESTION) !=  Messagebox.YES) return;

		sqlstm = "delete from mel_inventory where parent_id=" + glob_sel_csgn + ";" +
		"delete from mel_csgn where origid=" + glob_sel_csgn;

		glob_sel_csgn = "";
		workarea.setVisible(false);
	}

	if(!sqlstm.equals(""))
	{
		sqlhand.gpSqlExecuter(sqlstm);
		loadCSGN(last_list_csgn);
	}

	if(!msgtext.equals("")) guihand.showMessageBox(msgtext);
}

// Populate the CSGN metadata fields in popup
void popuCsgnMeta()
{
	if(glob_sel_csgn.equals("")) return;
	r = getMELCSGN_rec(glob_sel_csgn);
	if(r == null) { guihand.showMessageBox("ERR: cannot load MEL CSGN record.."); return; }
	m_csgn.setValue( kiboo.checkNullString(r.get("csgn")) );
	if(r.get("shipmenteta") != null) m_shipmenteta.setValue( r.get("shipmenteta") );
	m_extranotes.setValue( kiboo.checkNullString(r.get("extranotes")) );
}

/**
 * [updMELinventory description]
 * @param iwhat button ID to see what to update
 */
void updMELinventory(String iwhat)
{
	edititem_pop.close();
	if(glob_sel_inventory.equals("")) return;
	uptval = upsql = mpfsql = "";

	try
	{
		if(iwhat.equals("e_upd_serial_no"))
		{
			uptval = kiboo.replaceSingleQuotes(e_serial_no.getValue()).trim();
			upsql = "serial_no='" + uptval + "'";
		}

		if(iwhat.equals("e_upd_mel_asset"))
		{
			uptval = kiboo.replaceSingleQuotes(e_mel_asset.getValue()).trim();
			upsql = "mel_asset='" + uptval + "'";
		}

		if(iwhat.equals("e_upd_sub_type"))
		{
			uptval = e_sub_type.getSelectedItem().getLabel();
			upsql = "sub_type='" + uptval + "'";
		}

		if(iwhat.equals("e_upd_sub_spec"))
		{
			uptval = e_sub_spec.getSelectedItem().getLabel();
			upsql = "sub_spec='" + uptval + "'";
		}

	} catch (Exception e) {}

	if(uptval.equals("")) return;

	sqlstm = "update mel_inventory set " + upsql + " where origid=" + glob_sel_inventory;
	sqlhand.gpSqlExecuter(sqlstm);
	showConsignmentThings(); // refresh - slow if consignment alot of items
}

void consignmentMPF(String iwhat)
{
	mpfpop.close();
	if(csgnasset_holder.getFellowIfAny("csgnassets_lb") == null) return; // no consignment LB, ret
	ks = csgnassets_lb.getSelectedItems().toArray();
	if(ks.length == 0) return;
	invts = "";

	for(i=0;i<ks.length;i++)
	{
		invts += lbhand.getListcellItemLabel(ks[i],ITEM_ORIGID) + ",";
	}
	try { invts = invts.substring(0,invts.length()-1); } catch (Exception e) {}

	upsql = "";

	if(iwhat.equals("m_upd_sub_type"))
	{
		upsql = "set sub_type='" + m_sub_type.getSelectedItem().getLabel() + "'";
	}

	if(iwhat.equals("m_upd_sub_spec"))
	{
		upsql = "set sub_spec='" + m_sub_spec.getSelectedItem().getLabel() + "'";
	}

	sqlstm = "update mel_inventory " + upsql + " where origid in (" + invts + ");";
	sqlhand.gpSqlExecuter(sqlstm);
	showConsignmentThings(); // refresh - slow if consignment alot of items
}

]]>
</zscript>

<popup id="melaccpt_pop">
	<div sclass="shadowbox" style="background:#E3AC24">
		<vbox>
			<button label="ACCEPT_YES" onClick="setMELCSGN_flags(1,self.getLabel())" />
			<button label="ACCEPT_PARTIAL" onClick="setMELCSGN_flags(1,self.getLabel())" />
			<button label="ACCEPT_NONE" onClick="setMELCSGN_flags(1,self.getLabel())" />
		</vbox>
	</div>
</popup>

<popup id="locationpop">
	<div sclass="shadowbox" style="background:#E3AC24">
		<vbox>
			<button label="SHAH_ALAM" onClick="setMELCSGN_flags(2,self.getLabel())" />
			<button label="KUCHING" onClick="setMELCSGN_flags(2,self.getLabel())" />
			<button label="KOTA_KINABALU" onClick="setMELCSGN_flags(2,self.getLabel())" />
		</vbox>
	</div>
</popup>

<popup id="updmelcsgnpop">
	<div sclass="shadowbox" style="background:#EA1919">
		<grid>
			<rows>
				<row>
					<label value="MEL CSGN REF" sclass="k9" />
					<textbox id="m_csgn" sclass="k9" />
				</row>
				<row>
					<label value="Shipment ETA" sclass="k9" />
					<datebox id="m_shipmenteta" format="yyyy-MM-dd" style="font-size:9px" onCreate="kiboo.setTodayDatebox(self)" />
				</row>
				<row>
					<label value="Notes" sclass="k9" />
					<textbox id="m_extranotes" sclass="k9" height="60px" multiline="true" />
				</row>
			</rows>
		</grid>
		<separator height="2px" />
		<button id="updcsgnmeta_b" label="Update consignment metadata" sclass="k9" onClick="doFunc(self.getId())" />
	</div>
</popup>

<popup id="adminpop">
	<div sclass="shadowbox" style="background:#EA1919">
		<vbox>
			<button id="settoday_b" label="Set today" sclass="k9mo" onClick="adminFunc(self.getId())" />
			<button id="setnew_b" label="Set NEW" sclass="k9mo" onClick="adminFunc(self.getId())" />
			<button id="trynotif_b" label="Set test notif email" sclass="k9mo" onClick="adminFunc(self.getId())" />
			
		</vbox>
	</div>
</popup>

<popup id="auditlogs_pop">
	<div sclass="shadowbox" style="background:#ef2929;" width="500px" >
		<label sclass="subhead" value="Audit Logs" />
		<separator height="3px" />
		<div id="auditlogs_holder" />
		<separator height="3px" />
		<button label="Ok" sclass="k9" onClick="auditlogs_pop.close()" />
	</div>
</popup>

<popup id="rwcoordpop">
	<div sclass="shadowbox" style="background:#2279D5">
		<vbox>
			<button id="genpricing_b" label="Generate temporary prices for items" sclass="k9mo" onClick="doFunc(self.getId())" />
			<button id="notifmelprice_b" label="Notify MEL prices completed" sclass="k9mo" onClick="doFunc(self.getId())" />
			<button id="notifreport_b" label="Notify MEL report committed" sclass="k9mo" onClick="doFunc(self.getId())" />
			<button id="notifdups_b" label="Notify MEL on duplicates consigment items" sclass="k9mo" onClick="doFunc(self.getId())" />
			<separator bar="true" />
			<button id="notifypart_b" label="Re-notify partner" sclass="k9mo" onClick="doFunc(self.getId())" />
			<button id="shwauditlogs_b" label="Show audit-log" sclass="k9mo" onClick="adminFunc(self.getId())" />
			<separator bar="true" />
			<button id="delconsgn_b" label="DELETE upload" style="color:#E12626" onClick="adminFunc(self.getId())" />
		</vbox>
	</div>
</popup>

<popup id="uploadfile_popup"> <!-- upload a file popup -->
	<groupbox>
	<caption label="Upload a file" />
		<grid>
			<rows>
				<row>
					<label value="Filename" class="k9" />
					<textbox id="fileupl_file_title" width="200px" class="k9" />
				</row>
				<row>
					<label value="Description" class="k9" />
					<textbox id="fileupl_file_description" multiline="true" height="60px" width="200px" class="k9" />
				</row>
			</rows>
		</grid>
	</groupbox>
	<separator height="3px" />
	<hbox>
		<button label="Select file" onClick="uploadFile(documents_holder,MEL_CSGN_PREFIX,glob_sel_csgn)" class="k9" />
		<button label="Close" onClick="uploadfile_popup.close()"  class="k9" />
	</hbox>
</popup>

<popup id="updatefiledesc_popup"> <!-- update file description popup -->
	<groupbox width="400px">
		<caption id="updatefiledesc_label" />
		<label value="Description" sclass="k9" />
		<textbox id="update_file_description" multiline="true" height="70px" width="99%" sclass="k9" />
		<separator height="3px" />
		<hbox>
			<button label="Update" sclass="k9" onClick="updateFileDescription(documents_holder,QUOTE_PREFIX,glob_sel_quote)" />
			<button label="Close" sclass="k9" onClick="updatefiledesc_popup.close()" />
		</hbox>
	</groupbox>
</popup>

<popup id="edititem_pop">
	<div sclass="shadowbox" style="background:#2279D5" width="400px">
		<grid sclass="GridLayoutNoBorder">
			<rows>
				<row style="background:#2279D5">
					<label sclass="k9b" value="Serial No." />
					<textbox id="e_serial_no" sclass="k9" />
					<button id="e_upd_serial_no" sclass="k9" label="Update" onClick="updMELinventory(self.getId())" />
				</row>
				<row style="background:#2279D5">
					<label sclass="k9b" value="MEL Ref Asset No." />
					<textbox id="e_mel_asset" sclass="k9" />
					<button id="e_upd_mel_asset" sclass="k9" label="Update" onClick="updMELinventory(self.getId())" />
				</row>
				<row style="background:#2279D5">
					<label sclass="k9b" value="Proc / Monitor Type" />
					<listbox id="e_sub_type" sclass="k9" mold="select" />
					<button id="e_upd_sub_type" sclass="k9" label="Update" onClick="updMELinventory(self.getId())" />
				</row>
				<row style="background:#2279D5">
					<label sclass="k9b" value="P.Speed / M.Size" />
					<listbox id="e_sub_spec" sclass="k9" mold="select" />
					<button id="e_upd_sub_spec" sclass="k9" label="Update" onClick="updMELinventory(self.getId())" />
				</row>
			</rows>
		</grid>
	</div>
</popup>

<popup id="mpfpop">
	<div sclass="shadowbox" style="background:#2279D5" width="400px">
		<grid sclass="GridLayoutNoBorder">
			<rows>
				<row style="background:#2279D5">
					<label sclass="k9b" value="Proc / Monitor Type" />
					<listbox id="m_sub_type" sclass="k9" mold="select" />
					<button id="m_upd_sub_type" sclass="k9" label="Update" onClick="consignmentMPF(self.getId())" />
				</row>
				<row style="background:#2279D5">
					<label sclass="k9b" value="P.Speed / M.Size" />
					<listbox id="m_sub_spec" sclass="k9" mold="select" />
					<button id="m_upd_sub_spec" sclass="k9" label="Update" onClick="consignmentMPF(self.getId())" />
				</row>
			</rows>
		</grid>
	</div>
</popup>

<style src="/real-world.css" />
<style>
	.GridLayoutNoBorder tr.z-row td.z-row-inner, tr.z-row .z-cell, div.z-grid
	{
	border: none; overflow: hidden; zoom: 1;
	border-top: none; border-left: none; border-right: none; border-bottom: none;
	}
</style>

<div width="1200px">
<panel id="${MYPANEL}" title="${MYTITLE} ${MYVERSION}" border="normal" collapsible="true" closable="true" >
<panelchildren style="background:#65780E">

<div sclass="shadowbox" style="background:#2e3436;">
	<hbox>
		<label value="Start" class="k9b" />
		<datebox id="startdate" format="yyyy-MM-dd" style="font-size:9px" onCreate="kiboo.setTodayDatebox(self)" />
		<label value="End" class="k9b" />
		<datebox id="enddate" format="yyyy-MM-dd" style="font-size:9px" onCreate="kiboo.setTodayDatebox(self)" />
		<button label="Load CSGN" sclass="k9mo" onClick="loadCSGN(1)" />
		<listbox id="p_location" mold="select" sclass="k9" />
		<button label="by location" sclass="k9mo" onClick="loadCSGN(2)" />
		<textbox id="bycsgn_tb" sclass="k9" width="60px" />
		<button label="by CSGN" sclass="k9mo" onClick="loadCSGN(3)" />
		<separator width="20px" />
		<button id="admin_b" label="ADMIN" sclass="k9mo" style="color:#DE1515" onClick="adminpop.open(self)" visible="false" />
	</hbox>
	<separator bar="true" />
	<hbox>
		<button id="newcsgn_b" label="NEW CSGN" sclass="k9mo" onClick="doFunc(self.getId())" />
		<button label="UPDATE MEL metadata" sclass="k9mo" onClick="popuCsgnMeta();updmelcsgnpop.open( (csgn_sel_item == null) ? self : csgn_sel_item )" />
		<button label="Set RW location" sclass="k9mo" onClick="locationpop.open( (csgn_sel_item == null) ? self : csgn_sel_item )" />
		<button id="commitcsgn_b" label="COMMIT" sclass="k9mo" onClick="doFunc(self.getId())" />
		<button id="cancelcsgn_b" label="CANCEL" sclass="k9mo" style="color:#DB0F0F" onClick="doFunc(self.getId())" />
		<separator width="20px" />
		<button label="MEL acceptance" sclass="k9mo" style="color:#19E137" onClick="melaccpt_pop.open(self)" />
		<separator width="30px" />
		<button id="rwcoord_b" label="RW Coordinator" sclass="k9mo" style="color:#2279D5" onClick="rwcoordpop.open(self)" visible="false" />
	</hbox>
</div>
<separator height="2px" />

<div sclass="shadowbox" style="background:#3A4566;overflow:auto;overflow-y:hidden">
	<div id="csgnholder" />
</div>
<separator height="2px" />

<div id="workarea" sclass="shadowbox" style="background:#3A4566;overflow:auto;overflow-y:hidden" visible="false">
	<hbox>
		<label value="Equipments List :: " sclass="subhead0" />
		<label id="uplcount_lbl" sclass="subhead0" />
		<separator width="10px" />
		<button id="uplassets_b" label="Upload XLS" sclass="k9mo" onClick="rawUploadConsignment()" />
		<button id="savelist_b" label="Save equipments list" sclass="k9mo" onClick="doFunc(self.getId())" />
		<button label="MPF" sclass="k9mo" onClick="mpfpop.open(self)" />
	</hbox>
	<separator height="3px" />
	<div id="csgnasset_holder" />
	<separator height="2px" />

	<div sclass="shadowbox" style="background:#555753" id="docholder" width="500px">
		<label sclass="subhead1">ATTACHMENTS / DOCUMENTS</label>
		<separator height="3px" />
		<hbox>
			<button id="uploaddoc_btn" label="Upload file" class="k9" onClick="showUploadPopup(MEL_CSGN_PREFIX,glob_sel_csgn)" />
			<button id="viewdoc_btn" label="View file" class="k9" onClick="viewFile()" />
			<button id="editdoc_btn" label="Update" class="k9" onClick="updatefiledesc_popup.open(self)" />
			<button id="deletedoc_btn" label="Delete" class="k9" onClick="deleteFile_2(documents_holder,MEL_CSGN_PREFIX,glob_sel_csgn)" />
		</hbox>
		<separator height="3px" />
		<div id="documents_holder" />
	</div>

	<div id="kasiexport" visible="false" />
</div>

<zscript>
<![CDATA[

luhand.populateListbox_ByLookup(p_location, "MEL_PARTNER_LOCATION", 2);

luhand.populateListbox_ByLookup(e_sub_type, "MEL_PROCESSOR", 2);
luhand.populateListbox_ByLookup(e_sub_spec, "MEL_PROCESSOR_SPEED", 2);

luhand.populateListbox_ByLookup(m_sub_type, "MEL_PROCESSOR", 2);
luhand.populateListbox_ByLookup(m_sub_spec, "MEL_PROCESSOR_SPEED", 2);

if(sechand.allowedUser(useraccessobj.username,"MEL_RW_COORD_USERS"))
{
	rwcoord_b.setVisible(true);
}

if(useraccessobj.accesslevel == 9)
{
	admin_b.setVisible(true);
}

]]>
</zscript>
</panelchildren>
</panel>
</div>
</zk>


